<?xml version="1.0" encoding="utf-8"?>

<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/MsBuild/2003">

  <!-- http://msbuildtasks.tigris.org/ -->
  <Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.targets" />
  <UsingTask TaskName="SlowCheetah.Tasks.TransformXml" AssemblyFile="SlowCheetah.Tasks.dll"/>

  <!-- http://yuicompressor.codeplex.com/ -->
  <UsingTask TaskName="CompressorTask" AssemblyFile="Yahoo.Yui.Compressor.MSBuildTask.dll" />
  
  <UsingTask TaskName="TransformXml" AssemblyFile="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v10.0\Web\Microsoft.Web.Publishing.Tasks.dll"/>

  <!-- Default Parameters -->
  <PropertyGroup>
    <NUnit-ToolPath>..\..\Dependency\Installers\NUnit\bin</NUnit-ToolPath>
    <Combine-ToolPath>..\..\Dependency\Installers\Combine\combine.bat</Combine-ToolPath>
    <WebkitToPDF-ToolPath>..\..\Dependency\Installers\WebkitToPDF</WebkitToPDF-ToolPath>
    <Dependency>..\..\Dependency</Dependency>
    <BuildPath>$(Dependency)\Website</BuildPath>
    <SitecoreModules>$(Dependency)\SitecoreModules</SitecoreModules>
    <IsDebugBuild>Nope</IsDebugBuild>
    <!-- Properties group for Determin 64bit Architechture created by Ming Jia, questions sent to mailming@gmail.com-->
    <ISx64Server>false</ISx64Server>
    <ISx64Server Condition="'$(PROCESSOR_ARCHITECTURE)'=='AMD64' or '$(PROCESSOR_ARCHITEW6432)'=='AMD64'">true</ISx64Server>

    <!-- js/css settings -->
    <JavaScriptPath>js</JavaScriptPath>
    <StyleSheetPath>css</StyleSheetPath>
    <CompressionType>YuiStockCompression</CompressionType>
    <ObfuscateJavaScript>Yep</ObfuscateJavaScript>
    <PreserveAllSemicolons>Nope</PreserveAllSemicolons>
    <DisableOptimizations>Nope</DisableOptimizations>
    <LoggingType>ALittleBit</LoggingType>
    <Configuration Condition=" '$(Configuration)'=='' ">Release</Configuration>
    <OutputFolder Condition=" '$(OutputFolder)'=='' ">App_Config</OutputFolder>
  </PropertyGroup>

  <PropertyGroup Condition="'$(CustomBuildPath)' != ''">
    <BuildPath>$(CustomBuildPath)</BuildPath>
  </PropertyGroup>

  <!-- Debug Setup Configuration Parameters -->
  <PropertyGroup Condition="$(Configuration.Contains('Debug')) == 'True'">
    <IsDebugBuild>Yep</IsDebugBuild>

    <!-- Disble compression settings when the build is a debug build -->
    <CompressionType>None</CompressionType>
    <ObfuscateJavaScript>Nope</ObfuscateJavaScript>
    <PreserveAllSemicolons>Yep</PreserveAllSemicolons>
    <DisableOptimizations>Yep</DisableOptimizations>
    <LoggingType>ALittleBit</LoggingType>
  </PropertyGroup>

  <!--================================================================================
        Runs the unit tests as part of the build if the build is a debug build.
        Any failed tests will come up in the Error List window
    -->
  <Target Name="UnitTests" Condition="'$(IsDebugBuild)' == 'Yep'">
    <!--<NUnit Assemblies="..."
           IncludeCategory="..."
           ExcludeCategory="..."
           ToolPath="$(NUnitDllsPath)"
           ProjectConfiguration="$(Configuration)"
           OutputXmlFile="$(NUnitOutputPath)\UnitTests.xml"
           ContinueOnError="true">-->
    <!--<NUnit
        ToolPath="$(NUnit-ToolPath)"
        DisableShadowCopy="true"
        Assemblies="..\Igloo.VicHealth.EW.UnitTests\bin\Debug\Igloo.VicHealth.EW.UnitTests.dll"
        OutputXmlFile="test-results.xml" />-->
  </Target>


  <!--================================================================================
        Concatenates all the js files in the plugins directory into a single plugins.js file
    -->
  <Target Name="ConcatenateJS">
    <Exec ContinueOnError="false" Command="$(Combine-ToolPath) $(JavaScriptPath)\plugins\*.js $(JavaScriptPath)\plugins.js"/>
    <Exec ContinueOnError="false" Command="$(Combine-ToolPath) $(JavaScriptPath)\ew\*.js $(JavaScriptPath)\script.js"/>
  </Target>

  <!--================================================================================
        * Transforms all config files
        * Minifies css and js if set to do so per the current configuration
        * Copies all changed files to the website directory
    -->
  <Target Name="AfterBuild" DependsOnTargets="UnitTests;ConcatenateJS" Condition="$(Configuration.Contains('FED')) != 'True'">

    <!--<Message Text="Copying Sitecore Module files" />
    <ItemGroup>
      <SitecoreModuleFiles
          Include="$(SitecoreModules)\files\**\*"
          Exclude="$(SitecoreModules)\**\.svn\**\*.*">
      </SitecoreModuleFiles>
    </ItemGroup>
    <Copy SourceFiles="@(SitecoreModuleFiles)"
        DestinationFiles="@(SitecoreModuleFiles->'$(BuildPath)\%(RecursiveDir)\%(Filename)%(Extension)')"
        ContinueOnError="true"/>-->


    <Message Text="BEGIN: Transformations" />
    <!-- Make sure the App_Config\Include directory exists. Required on the build server where there is no website -->
    <MakeDir Directories="$(BuildPath)\App_Config\Include" />
    <MakeDir Directories="$(BuildPath)\js" />
    <MakeDir Directories="$(BuildPath)\css" />

    <!-- Transform ConnectionStrings.config with appropriate configuration -->
    <TransformXml
    Source="App_Config\ConnectionStrings.config"
    Transform="App_Config\ConnectionStrings.$(Configuration).config"
    Destination="$(BuildPath)\App_Config\ConnectionStrings.config" />

    <!-- Transform web.config with appropriate configuration -->
    <TransformXml
    Source="App_Config\igloo.config"
    Transform="App_Config\igloo.$(Configuration).config"
    Destination="Igloo.Transformed.config" />

    <TransformXml
    Source="Web.config"
    Transform="Igloo.Transformed.config"
    Destination="Web.Transformed.config" />

    <TransformXml
        Source="Web.Transformed.config"
      Transform="Web.$(Configuration).config"
      Destination="$(BuildPath)\Web.config" />

    <!-- Transform Settings.config with appropriate configuration -->
    <TransformXml
    Source="App_Config\Include\Settings.config"
    Transform="App_Config\Include\Settings.$(Configuration).config"
    Destination="$(BuildPath)\App_Config\Include\Settings.config" />


    <TransformXml
      Source="App_Config\Include\WeBlog.config"
      Transform="App_Config\Include\WeBlog.$(Configuration).config"
      Destination="$(BuildPath)\App_Config\Include\WeBlog.config" />

    <TransformXml
      Source="App_Config\Include\Search.config"
      Transform="App_Config\Include\Search.$(Configuration).config"
      Destination="$(BuildPath)\App_Config\Include\Search.config" />

    <Message Text="END: Transformations" />

    <!--
		YUI COMPRESSOR DETAILS (http://yuicompressor.codeplex.com/):
		********************************************************************************
		ItemGroup\CssFiles or ItemGroup\JavaScriptFiles:	add zero to many files you wish to include in this compression task.
															Don't forget, you can use the wildcard (eg. *.css, *.js) if you feel up to it.
															Finally, at least one item is required - either a css file or a js file.
													   
		CssFiles/JavaScriptFiles data format: Please do not touch this.
		DeleteCssFiles: [Optional] True | Yes | Yeah | Yep | True | FoSho | Fo Sho. Default is False. Anything else is False. (eg. blah = false, xxxx111 = false, etc)
		CssCompressionType: YuiStockCompression | MichaelAshsRegexEnhancements | HaveMyCakeAndEatIt or BestOfBothWorlds or Hybrid; Default is YuiStockCompression.
		ObfuscateJavaScript: [Optional] refer to DeleteCssFiles, above.
		PreserveAllSemicolons: [Optional] refer to DeleteCssFiles, above.
		DisableOptimizations: [Optional] refer to DeleteCssFiles, above.
		EncodingType: [Optional] ASCII, BigEndianUnicode, Unicode, UTF32, UTF7, UTF8, Default. Default is 'Default'.
		DeleteJavaScriptFiles: [Optional] refer to DeleteCssFiles, above.
		LineBreakPosition: [Optional] the position where a line feed is appened when the next semicolon is reached. Default is -1 (never add a line break).
						 0 (zero) means add a line break after every semicolon. (This might help with debugging troublesome files).          
		LoggingType: None | ALittleBit | HardcoreBringItOn;  Hardcore also lists javascript verbose warnings, if there are any (and there usually is :P ).
		ThreadCulture: [Optional] the culture you want the thread to run under. Default is 'en-gb'.
		IsEvalIgnored: [Optional] compress any functions that contain 'eval'. Default is False, which means a function that contains
					 'eval' will NOT be compressed. It's deemed risky to compress a function containing 'eval'. That said,
					 if the usages are deemed safe this check can be disabled by setting this value to True.
		-->

    <!-- All javascript files (plugins have been combined into one file) -->
    <CreateItem Include="$(JavaScriptPath)\**\*.js"
        Exclude="$(JavaScriptPath)\.svn\**\*;$(JavaScriptPath)\plugins\**\*.*;$(JavaScriptPath)\ew\**\*.*">
      <Output ItemName="JSLibs"
    TaskParameter="Include" />
    </CreateItem>
    <CompressorTask
    JavaScriptFiles="%(JSLibs.Identity)"
        JavaScriptCompressionType="$(CompressionType)"
    ObfuscateJavaScript="$(ObfuscateJavaScript)"
    PreserveAllSemicolons="$(PreserveAllSemicolons)"
    DisableOptimizations="$(DisableOptimizations)"
    EncodingType="Default"
    DeleteJavaScriptFiles="false"
        JavaScriptOutputFile="$(BuildPath)\js\%(JSLibs.filename)%(JSLibs.extension)"
    LoggingType="$(LoggingType)" />

    <!-- STYLE.CSS -->
    <CompressorTask
        CssFiles="$(StyleSheetPath)\style.css"
        CssOutputFile="$(BuildPath)\$(StyleSheetPath)\style.css"
        CssCompressionType="$(CompressionType)"
    PreserveAllSemicolons="$(PreserveAllSemicolons)"
    DisableOptimizations="$(DisableOptimizations)"
    EncodingType="Default"
    LoggingType="$(LoggingType)" />

    <!-- PRINT-STYLE.CSS -->
    <CompressorTask
        CssFiles="$(StyleSheetPath)\print-style.css"
        CssOutputFile="$(BuildPath)\$(StyleSheetPath)\print-style.css"
        CssCompressionType="$(CompressionType)"
        PreserveAllSemicolons="$(PreserveAllSemicolons)"
        DisableOptimizations="$(DisableOptimizations)"
        EncodingType="Default"
        LoggingType="$(LoggingType)" />

    <Message Text="Copying web files" />
    <CreateItem Include="**\*.aspx;**\*.ascx;xsl\**\*.xslt;**\*.html;**\*.htm;**\*.asmx;**\*.svc;**\*.asax;**\*.xml;**\*.swf;**\*.png;**\*.jpg;**\*.jpeg;**\*.gif;**\*.htc;**\*.config;**\*.txt;**\*.ashx;**\*.master;**\*.ico;**\*.ttf;**\*.woff;**\*.svg;**\*.eot;**\*.css"
            Exclude="MSBuild\**\*.*;obj\**\*.*;**\.svn\**\*.*;**\*.config;print-style.css;style.css">
      <Output ItemName="WebFiles" TaskParameter="Include"/>
    </CreateItem>
    <Copy SourceFiles="@(WebFiles)"
        DestinationFiles="@(WebFiles->'$(BuildPath)\%(relativedir)%(Filename)%(Extension)')"
        SkipUnchangedFiles="true"
        OverwriteReadOnlyFiles="true"/>

    <Message Text="Copying dll files from '$(BuildPath)'" />
    <CreateItem Include="$(OutDir)\*.dll" Exclude="**\.svn\**\*.*">
      <Output ItemName="BinItems" TaskParameter="Include" />
    </CreateItem>
    <Copy SourceFiles="@(BinItems)"
    DestinationFolder="$(BuildPath)\bin"
    SkipUnchangedFiles="true"
    OverwriteReadOnlyFiles="true" />

    <Message Text="Copying webkitToPDF files" />
    <CreateItem Include="$(WebkitToPDF-ToolPath)\*.*" Exclude="**\.svn\**\*.*">
      <Output ItemName="WebkitToPDFItems" TaskParameter="Include" />
    </CreateItem>
    <Copy SourceFiles="@(WebkitToPDFItems)"
    DestinationFolder="$(BuildPath)\bin"
    SkipUnchangedFiles="true"
    OverwriteReadOnlyFiles="true" />

    <Message Text="Copying pdb files" />
    <CreateItem Include="$(OutDir)\*.pdb" Exclude="**\.svn\**\*.*" Condition="'$(IsDebugBuild)' == 'yep'">
      <Output ItemName="PdbItems" TaskParameter="Include" />
    </CreateItem>
    <Copy SourceFiles="@(PdbItems)"
    DestinationFolder="$(BuildPath)\bin"
    SkipUnchangedFiles="true"
    OverwriteReadOnlyFiles="true"
          Condition="'$(IsDebugBuild)' == 'yep'" />

    <Message Text="Copying changes to Sitecore folder" />
    <CreateItem Include="Sitecore\**\*.*" Exclude="**\.svn\**\*.*">
      <Output ItemName="SitecoreItems" TaskParameter="Include" />
    </CreateItem>
    <Copy SourceFiles="@(SitecoreItems)"
          DestinationFiles="@(SitecoreItems->'$(BuildPath)\%(relativedir)%(Filename)%(Extension)')"
    SkipUnchangedFiles="true"
    OverwriteReadOnlyFiles="true" />

    <Message Text="Copying domain config" />
    <CreateItem Include="App_Config\Security\Domains.config"
                Exclude=".svn\**\*">
      <Output ItemName="domain" TaskParameter="Include" />
    </CreateItem>
    <Copy SourceFiles="@(domain)"
    DestinationFolder="$(BuildPath)\App_Config\Security\"
    SkipUnchangedFiles="true"
    OverwriteReadOnlyFiles="true" />
  </Target>
</Project>